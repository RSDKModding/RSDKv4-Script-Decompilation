// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: Plane Sw H Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.extendLeft
private alias object.value1 : object.extendRight
private alias object.value2 : object.planeR		// bottom (rising up), named the same as PSwitch_V for consistency
private alias object.value3 : object.planeL		// top (falling down), named the same as PSwitch_V for consistency
private alias object.value4 : object.drawOrderR // bottom (rising up), named the same as PSwitch_V for consistency
private alias object.value5 : object.drawOrderL // top (falling down), named the same as PSwitch_V for consistency
private alias object.value6 : object.onGround

// Player Aliases
private alias object.state : player.state
private alias object.yvel : player.yvel
private alias object.gravity : player.gravity
private alias object.collisionPlane : player.collisionPlane
private alias object.value18 : player.sortedDrawOrder


// ========================
// Events
// ========================

event ObjectUpdate
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		CheckEqual(object.onGround, false)
		temp0 = checkResult
		CheckEqual(player[currentPlayer].gravity, GRAVITY_GROUND)
		temp0 |= checkResult
		CheckEqual(player[currentPlayer].state, Player_State_Climb)
		temp0 |= checkResult

		if temp0 == true
			BoxCollisionTest(C_TOUCH, object.entityPos, object.extendLeft, -12, object.extendRight, 12, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				if player[currentPlayer].yvel > 0
					player[currentPlayer].collisionPlane 	= object.planeL
					player[currentPlayer].sortedDrawOrder 	= object.drawOrderL
				else
					player[currentPlayer].collisionPlane 	= object.planeR
					player[currentPlayer].sortedDrawOrder 	= object.drawOrderR
				end if
			end if
		end if
	next
end event


event ObjectStartup
	foreach (TypeName[Plane Sw H], arrayPos0, ALL_ENTITIES)
		temp0 = object[arrayPos0].propertyValue
		temp0 &= 3
		temp0 += 2
		object[arrayPos0].extendLeft = 1
		object[arrayPos0].extendLeft <<= temp0
		object[arrayPos0].extendLeft <<= 3
		object[arrayPos0].extendLeft += 8
		object[arrayPos0].extendRight = object[arrayPos0].extendLeft
		FlipSign(object[arrayPos0].extendLeft)

		GetBit(object[arrayPos0].planeR, object[arrayPos0].propertyValue, 2)
		GetBit(object[arrayPos0].planeL, object[arrayPos0].propertyValue, 3)

		GetBit(object[arrayPos0].drawOrderR, object[arrayPos0].propertyValue, 4)
		object[arrayPos0].drawOrderR <<= 1
		object[arrayPos0].drawOrderR += 4
		GetBit(object[arrayPos0].drawOrderL, object[arrayPos0].propertyValue, 5)
		object[arrayPos0].drawOrderL <<= 1
		object[arrayPos0].drawOrderL += 4

		GetBit(object[arrayPos0].onGround, object[arrayPos0].propertyValue, 7)
	next
end event


// ========================
// Editor Events & Aliases
// ========================

private alias 0 : VAR_ID_SIZE
private alias 1 : VAR_ID_PLANEL
private alias 2 : VAR_ID_PLANER
private alias 3 : VAR_ID_DRAWL
private alias 4 : VAR_ID_DRAWR
private alias 5 : VAR_ID_ONGROUND


event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break
			
		case VAR_ID_SIZE // size
			checkResult = object.propertyValue
			checkResult &= 3
			break
			
		case VAR_ID_PLANEL // collisionPlaneU
			GetBit(checkResult, object.propertyValue, 2)
			break
			
		case VAR_ID_PLANER // collisionPlaneD
			GetBit(checkResult, object.propertyValue, 3)
			break
			
		case VAR_ID_DRAWL // drawOrderU
			GetBit(checkResult, object.propertyValue, 4)
			break
			
		case VAR_ID_DRAWR // drawOrderD
			GetBit(checkResult, object.propertyValue, 5)
			break
			
		case VAR_ID_ONGROUND // onGround
			GetBit(checkResult, object.propertyValue, 7)
			break
			
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break
			
		case VAR_ID_SIZE // size
			temp1 = 3
			Not(temp1)
			object.propertyValue &= temp1

			temp0 = editor.variableValue
			temp0 &= 3
			object.propertyValue |= temp0
			break
			
		case VAR_ID_PLANEL // collisionPlaneU
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 2, checkResult)
			break
			
		case VAR_ID_PLANER // collisionPlaneD
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 3, checkResult)
			break
			
		case VAR_ID_DRAWL // drawOrderU
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 4, checkResult)
			break
			
		case VAR_ID_DRAWR // drawOrderD
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 5, checkResult)
			break
			
		case VAR_ID_ONGROUND // onGround
			CheckNotEqual(editor.variableValue, false)
			SetBit(object.propertyValue, 7, checkResult)
			break
			
		end switch
	end if
end event


event RSDKDraw
	// Grabbed this from S2's debug view since S1 doesn't have one, works the same though
	
	temp1 = object.propertyValue
	temp1 &= 3
	temp1 += 2
	temp0 = 1
	temp0 <<= temp1
	temp1 = temp0
	temp0 <<= 19
	FlipSign(temp0)
	temp0 += object.xpos
	temp0 += 0x80000
	
	GetBit(temp2, object.propertyValue, 7)
	temp3 = object.propertyValue
	temp3 >>= 2
	temp3 &= 15

	temp4 = 0
	while temp4 < temp1
		if temp2 == true
			DrawSpriteXY(16, temp0, object.ypos)
		end if
		DrawSpriteXY(temp3, temp0, object.ypos)
		temp0 += 0x100000
		temp4++
	loop

	if temp1 == 0
		DrawSprite(temp3)
	end if
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	
	temp0 = 0
	temp1 = 46
	while temp0 < 8
		SpriteFrame(-8, -8, 16, 16, temp1, 158)
		temp0++
		temp1 += 17
	loop
	
	temp0 = 0
	temp1 = 46
	while temp0 < 8
		SpriteFrame(-8, -8, 16, 16, temp1, 175)
		temp0++
		temp1 += 17
	loop
	
	SpriteFrame(-8, -8, 16, 16, 182, 141) // #16 - back

	AddEditorVariable("size")
	SetActiveVariable("size")
	AddEnumVariable("4 Nodes", 0)
	AddEnumVariable("8 Nodes", 1)
	AddEnumVariable("16 Nodes", 2)
	AddEnumVariable("32 Nodes", 3)

	AddEditorVariable("collisionPlaneU")
	SetActiveVariable("collisionPlaneU")
	AddEnumVariable("Plane A", 0)
	AddEnumVariable("Plane B", 1)

	AddEditorVariable("collisionPlaneD")
	SetActiveVariable("collisionPlaneD")
	AddEnumVariable("Plane A", 0)
	AddEnumVariable("Plane B", 1)

	AddEditorVariable("drawOrderU")
	SetActiveVariable("drawOrderU")
	AddEnumVariable("Low Layer", 0)
	AddEnumVariable("High Layer", 1)

	AddEditorVariable("drawOrderD")
	SetActiveVariable("drawOrderD")
	AddEnumVariable("Low Layer", 0)
	AddEnumVariable("High Layer", 1)

	AddEditorVariable("onGround")
	SetActiveVariable("onGround")
	AddEnumVariable("false", false)
	AddEnumVariable("true", true)
end event
